name: GitHub Classroom Workflow
on:
  push:
    branches: [ master ]
jobs:
  build:
    name: Autograding
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v2

      # TODO build, publish to docker hub, deploy to k8s

        # 1. Установка и аутентификация в Yandex Cloud
      - name: Install Yandex Cloud CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH




      - name: Authenticate in Yandex Cloud
        run: |
          yc config profile create github-actions
          yc config set token ${{ secrets.YANDEX_CLOUD_OAUTH }}
          yc config set cloud-id ${{ secrets.YANDEX_CLOUD_ID }}
          yc config set folder-id ${{ secrets.YANDEX_FOLDER_ID }}


      #  2. Логин в Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      #  3. Сборка и публикация образа
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./gateway
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/gateway:latest

      - name: Build and Push Reservation
        uses: docker/build-push-action@v4
        with:
          context: ./reservation
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/reservation:latest
  
      - name: Build and Push Payment
        uses: docker/build-push-action@v4
        with:
          context: ./payment
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/payment:latest
  
      - name: Build and Push Loyalty
        uses: docker/build-push-action@v4
        with:
          context: ./loyalty
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/loyalty:latest   

      #  3. Деплой в Kubernetes

      - name: Create Kubernetes Namespace
          run: |
            kubectl create namespace ${{ secrets.K8S_NAMESPACE }} || echo "Namespace already exists"


      - name: Установка kubectl и helm
        run: |
          sudo apt-get update && sudo apt-get install -y kubectl
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Настройка подключения к Kubernetes
        run: |
          yc managed-kubernetes cluster get-credentials ${{ secrets.K8S_CLUSTER_NAME }} \
            --external --force

      - name: Деплой Helm-чартов
        run: |
          helm upgrade --install gateway helm-chart/ \
            --namespace ${{ secrets.K8S_NAMESPACE }} \
            --set image.repository=${{ secrets.REGISTRY }}/gateway \
            --set image.tag=latest
          
          helm upgrade --install reservation helm-chart/ \
            --namespace ${{ secrets.K8S_NAMESPACE }} \
            --set image.repository=${{ secrets.REGISTRY }}/reservation \
            --set image.tag=latest
          
          helm upgrade --install payment helm-chart/ \
            --namespace ${{ secrets.K8S_NAMESPACE }} \
            --set image.repository=${{ secrets.REGISTRY }}/payment \
            --set image.tag=latest
          
          helm upgrade --install loyalty helm-chart/ \
            --namespace ${{ secrets.K8S_NAMESPACE }} \
            --set image.repository=${{ secrets.REGISTRY }}/loyalty \
            --set image.tag=latest

      - name: Проверка деплоя
        run: kubectl get pods -n ${{ secrets.K8S_NAMESPACE }}


      # 5. Запуск API тестов
      - name: Run API Tests
        uses: matt-ball/newman-action@master
        with:
          collection: v2/postman/collection.json
          environment: v2/postman/environment.json
          delayRequest: 100
          reporters: '[ "cli" ]'

      - uses: education/autograding@v1
        id: autograder
        continue-on-error: true