services:
  postgres:
    image: library/postgres:13
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_INITDB_SKIP_INIT: "true"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: reservations, payments, loyalties, users
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    networks:
      - backend

# TODO добавить сервисы
  loyalty:
    restart: always
    build: ./loyalty
    ports:
      - "8050:8050"
    networks:
      - backend
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/loyalties"
      JAVA_OPTS: "-Xmx512m"

  payment:
    restart: always
    build: ./payment
    ports:
      - "8060:8060"
    networks:
      - backend
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/payments"
      JAVA_OPTS: "-Xmx512m"

  reservation:
    restart: always
    build: ./reservation
    ports:
      - "8070:8070"
    networks:
      - backend
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/reservations"
      JAVA_OPTS: "-Xmx512m"


  identity:
    restart: always
    build: ./identity-provider
    ports:
      - "9000:9000"
    networks:
      - backend
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/users"


  gate:
    restart: always
    build: ./gateway
    ports:
      - "8080:8080"
    networks:
      - backend
    depends_on:
      - postgres
      - loyalty
      - payment
      - reservation
      - identity

networks:
  backend:
    driver: bridge

volumes:
  db-data: