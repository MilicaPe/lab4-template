{{- range $name, $service := .Values.services }}
{{- if and $service.enabled (eq $name $.Values.serviceName) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    app: {{ $name }}
spec:
  replicas: {{ $service.replicaCount }}
  selector:
    matchLabels:
      app: {{ $name }}
  template:
    metadata:
      labels:
        app: {{ $name }}
    spec:
      containers:
        - name: {{ $name }}
          image: {{ $service.image.repository }}:{{ $service.image.tag }}
          imagePullPolicy: Always
          ports:
            - containerPort: {{ (index $service.ports 0).containerPort }}

          env:
            {{- range $service.env }}
            - name: {{ .name }}
              value: "{{ .value }}"
            {{- end }}
            
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://{{ $.Values.database.host }}:{{ $.Values.database.port }}/{{ $.Values.database.name }}"
            - name: SPRING_DATASOURCE_USERNAME
              value: "{{ $.Values.database.user }}"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "{{ $.Values.database.password }}"

          {{- if eq $name "postgres" }}  # Только для БД
          volumeMounts:
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d/
          {{- end }}
      
      {{- if eq $name "postgres" }}  # Определяем volume для БД
      volumes:
        - name: init-sql
          configMap:
            name: postgres-init-sql
      {{- end }}
---
{{- end }}
{{- end }}
